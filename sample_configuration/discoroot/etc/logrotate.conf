# This is the overall log rotation configuration
#
# The logrotate.conf specifies that logs be rotate up daily and logrotate is run daily via a cron.
# The logrotate configs in /etc/logrotate.d/ specify how these rotates happen.
#
# What these do is:
#  1/ Move log file X to X-$seconds_since_epoch
#  2/ Sends a hangup signal to syslog-ng, which causes it to close X-$seconds_since_epoch and open X
#  3/ Run backup_logs.sh to move the X-$seconds_since_epoch log to an S3 bucket
#
# On shutdown there are some logs that haven't been backed up to S3 since things have
# been logged since the last cron initiated log rotation. The /etc/init.d/disco-backup-logs
# script forces one last log rotation on shutdown so these logs will be captured.
#
# The S3 bucket has a lifecycle configuration as defined by the jenkins/disco_create_buckets.sh
# script that created it. This specifies how long the logs stay immediately accessible in S3
# before being archived to AWS Glacier, and it specifies when the logs are expired altogether.
#

# see "man logrotate" for details
# rotate log files daily
daily

# keep three days worth of backlogs
rotate 3

# create new (empty) log files after rotating old ones
create

# use date as a suffix of the rotated file
dateext

# Use %s for date format so files are not overwritten if there are two rotates in a day
dateformat -%s

# uncomment this if you want your log files compressed
#compress

# RPM packages drop log rotation information into this directory
include /etc/logrotate.d

# no packages own wtmp and btmp -- we'll rotate them here
/var/log/wtmp {
    monthly
    create 0664 root utmp
    minsize 1M
    rotate 1
}

/var/log/btmp {
    missingok
    monthly
    create 0600 root utmp
    rotate 1
}

# system-specific logs may be also be configured here.
